[
  {
    "name": "external video",
    "category": "components",
    "related": [],
    "description": "The `ExternalVideo` component renders an embedded video for the Storefront API's [ExternalVideo object](https://shopify.dev/api/storefront/reference/products/externalvideo).",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { ExternalVideo } from \"./ExternalVideo\";\n\nexport default function MyProductVideo() {\n    const data: any = {};\n\n    const firstMediaElement = data.products.edges[0].node.media.edges[0].node;\n    if (firstMediaElement.mediaContentType === 'EXTERNAL_VIDEO') {\n        return <ExternalVideo data={firstMediaElement} />;\n    }\n}\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    },
    "definitions": [
      {
        "title": "Props",
        "description": "interface description",
        "type": "ExternalVideoProps",
        "typeDefinitions": {
          "ExternalVideoProps": {
            "filePath": "/ExternalVideo.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ExternalVideoProps",
            "value": "Omit<\n  JSX.IntrinsicElements['iframe'],\n  PropsWeControl\n> & BaseProps",
            "description": ""
          },
          "PropsWeControl": {
            "filePath": "/ExternalVideo.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "PropsWeControl",
            "value": "'src'",
            "description": ""
          },
          "BaseProps": {
            "filePath": "/ExternalVideo.tsx",
            "name": "BaseProps",
            "description": "",
            "members": [
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "data",
                "value": "PartialObjectDeep<ExternalVideo, { recurseIntoArrays: true; }>",
                "description": "An object with fields that correspond to the Storefront API's [ExternalVideo object](https://shopify.dev/api/storefront/reference/products/externalvideo)."
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "options",
                "value": "YouTube | Vimeo",
                "description": "An object containing the options available for either\n[YouTube](https://developers.google.com/youtube/player_parameters#Parameters) or\n[Vimeo](https://vimeo.zendesk.com/hc/en-us/articles/360001494447-Using-Player-Parameters).",
                "isOptional": true
              }
            ],
            "value": "interface BaseProps {\n  /**\n   * An object with fields that correspond to the Storefront API's [ExternalVideo object](https://shopify.dev/api/storefront/reference/products/externalvideo).\n   */\n  data: PartialDeep<ExternalVideoType, {recurseIntoArrays: true}>;\n  /** An object containing the options available for either\n   * [YouTube](https://developers.google.com/youtube/player_parameters#Parameters) or\n   * [Vimeo](https://vimeo.zendesk.com/hc/en-us/articles/360001494447-Using-Player-Parameters).\n   */\n  options?: YouTube | Vimeo;\n}"
          },
          "PartialObjectDeep": {
            "description": "",
            "name": "PartialObjectDeep",
            "value": "PartialObjectDeep",
            "members": [],
            "override": "This is a test of the override system"
          },
          "YouTube": {
            "filePath": "/ExternalVideo.tsx",
            "name": "YouTube",
            "description": "",
            "members": [
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "autoplay",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "cc_lang_pref",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "cc_load_policy",
                "value": "1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "color",
                "value": "\"red\" | \"white\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "controls",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "disablekb",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "enablejsapi",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "end",
                "value": "number",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "fs",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "hl",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "iv_load_policy",
                "value": "1 | 3",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "list",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "list_type",
                "value": "\"playlist\" | \"user_uploads\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "loop",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "modest_branding",
                "value": "1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "origin",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "playlist",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "plays_inline",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "rel",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "start",
                "value": "number",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "widget_referrer",
                "value": "string",
                "description": "",
                "isOptional": true
              }
            ],
            "value": "interface YouTube {\n  autoplay?: 0 | 1;\n  cc_lang_pref?: string;\n  cc_load_policy?: 1;\n  color?: 'red' | 'white';\n  controls?: 0 | 1;\n  disablekb?: 0 | 1;\n  enablejsapi?: 0 | 1;\n  end?: number;\n  fs?: 0 | 1;\n  hl?: string;\n  iv_load_policy?: 1 | 3;\n  list?: string;\n  list_type?: 'playlist' | 'user_uploads';\n  loop?: 0 | 1;\n  modest_branding?: 1;\n  origin?: string;\n  playlist?: string;\n  plays_inline?: 0 | 1;\n  rel?: 0 | 1;\n  start?: number;\n  widget_referrer?: string;\n}"
          },
          "Vimeo": {
            "filePath": "/ExternalVideo.tsx",
            "name": "Vimeo",
            "description": "",
            "members": [
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "autopause",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "autoplay",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "background",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "byline",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "color",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "controls",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "dnt",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "loop",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "muted",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "pip",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "playsinline",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "portrait",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "quality",
                "value": "\"240p\" | \"360p\" | \"540p\" | \"720p\" | \"1080p\" | \"2k\" | \"4k\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "speed",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "#t",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "texttrack",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "title",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "transparent",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              }
            ],
            "value": "interface Vimeo {\n  autopause?: VimeoBoolean;\n  autoplay?: VimeoBoolean;\n  background?: VimeoBoolean;\n  byline?: VimeoBoolean;\n  color?: string;\n  controls?: VimeoBoolean;\n  dnt?: VimeoBoolean;\n  loop?: VimeoBoolean;\n  muted?: VimeoBoolean;\n  pip?: VimeoBoolean;\n  playsinline?: VimeoBoolean;\n  portrait?: VimeoBoolean;\n  quality?: '240p' | '360p' | '540p' | '720p' | '1080p' | '2k' | '4k';\n  speed?: VimeoBoolean;\n  '#t'?: string;\n  texttrack?: string;\n  title?: VimeoBoolean;\n  transparent?: VimeoBoolean;\n}"
          },
          "VimeoBoolean": {
            "filePath": "/ExternalVideo.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "VimeoBoolean",
            "value": "0 | 1 | boolean",
            "description": ""
          }
        }
      }
    ]
  },
  {
    "name": "image",
    "category": "components",
    "related": [
      {
        "name": "CartLines",
        "type": "component",
        "url": "api/hydrogen/components/CartLines"
      },
      {
        "name": "Url.com",
        "type": "external",
        "url": "http://www.url.com"
      }
    ],
    "description": "The `Image` component renders an image for the Storefront API's\n[Image object](https://shopify.dev/api/storefront/reference/common-objects/image) by using the `data` prop. You can [customize this component](https://shopify.dev/api/hydrogen/components#customizing-hydrogen-components) using passthrough props.\n\nAn image's width and height are determined using the following priority list:\n1. The width and height values for the `loaderOptions` prop\n2. The width and height values for bare props\n3. The width and height values for the `data` prop\n\nIf only one of `width` or `height` are defined, then the other will attempt to be calculated based on the image's aspect ratio,\nprovided that both `data.width` and `data.height` are available. If `data.width` and `data.height` aren't available, then the aspect ratio cannot be determined and the missing\nvalue will remain as `null`",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { Image } from \"./Image\"\n\nexport default function Product() {\n  const data: any = {};\n\n  const image = data.productByHandle.featuredImage;\n\n  return <Image data={image} />;\n}\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    },
    "definitions": [
      {
        "title": "Props",
        "description": "interface description",
        "type": "ShopifyImageProps",
        "typeDefinitions": {
          "ShopifyImageProps": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopifyImageProps",
            "value": "Omit<HtmlImageProps, 'src'> & {\n  /** An object with fields that correspond to the Storefront API's\n   * [Image object](https://shopify.dev/api/storefront/reference/common-objects/image).\n   * The `data` prop is required.\n   */\n  data: PartialDeep<ImageType, {recurseIntoArrays: true}>;\n  /** A custom function that generates the image URL. Parameters passed in\n   * are `ShopifyLoaderParams`\n   */\n  loader?: (params: ShopifyLoaderParams) => string;\n  /** An object of `loader` function options. For example, if the `loader` function\n   * requires a `scale` option, then the value can be a property of the\n   * `loaderOptions` object (for example, `{scale: 2}`). The object shape is `ShopifyLoaderOptions`.\n   */\n  loaderOptions?: ShopifyLoaderOptions;\n  /**\n   * `src` isn't used, and should instead be passed as part of the `data` object\n   */\n  src?: never;\n  /**\n   * An array of pixel widths to overwrite the default generated srcset. For example, `[300, 600, 800]`.\n   */\n  widths?: (HtmlImageProps['width'] | ImageType['width'])[];\n}",
            "description": ""
          },
          "HtmlImageProps": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "HtmlImageProps",
            "value": "React.ImgHTMLAttributes<HTMLImageElement>",
            "description": ""
          },
          "ShopifyLoaderParams": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopifyLoaderParams",
            "value": "Simplify<\n  ShopifyLoaderOptions & {\n    src: ImageType['url'];\n  }\n>",
            "description": ""
          },
          "ShopifyLoaderOptions": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopifyLoaderOptions",
            "value": "{\n  crop?: 'top' | 'bottom' | 'left' | 'right' | 'center';\n  scale?: 2 | 3;\n  width?: HtmlImageProps['width'] | ImageType['width'];\n  height?: HtmlImageProps['height'] | ImageType['height'];\n}",
            "description": "",
            "members": [
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "crop",
                "value": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "scale",
                "value": "3 | 2",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "width",
                "value": "string | number",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "height",
                "value": "string | number",
                "description": "",
                "isOptional": true
              }
            ]
          }
        }
      }
    ]
  },
  {
    "name": "media file",
    "category": "components",
    "related": [
      {
        "name": "Image",
        "type": "component",
        "url": "api/hydrogen/components/primitive/image"
      },
      {
        "name": "Video",
        "type": "component",
        "url": "api/hydrogen/components/primitive/video"
      },
      {
        "name": "ExternalVideo",
        "type": "component",
        "url": "api/hydrogen/components/primitive/externalvideo"
      },
      {
        "name": "ModelViewer",
        "type": "component",
        "url": "api/hydrogen/components/primitive/modelviewer"
      }
    ],
    "description": "The `MediaFile` component renders the media for the Storefront API's\n[Media object](https://shopify.dev/api/storefront/reference/products/media). It renders an `Image `Video`, an `ExternalVideo`, or a `ModelViewer` depending on the `__typename` of the `data` prop.",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { MediaFile } from \"./MediaFile\";\n\nexport function MyComponent() {\n  const data: any = {};\n\n  return (\n    <ul>\n      {data?.products?.map((product) => {\n        return <MediaFile data={product.node.media.edges[0].node} />;\n      })}\n    </ul>\n  );\n}\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    },
    "definitions": [
      {
        "title": "props",
        "description": "interface description",
        "type": "MediaFileProps",
        "typeDefinitions": {
          "MediaFileProps": {
            "filePath": "/MediaFile.tsx",
            "name": "MediaFileProps",
            "description": "",
            "members": [
              {
                "filePath": "/MediaFile.tsx",
                "syntaxKind": "PropertySignature",
                "name": "data",
                "value": "PartialObjectDeep<ExternalVideo, { recurseIntoArrays: true; }> | PartialObjectDeep<MediaImage, { recurseIntoArrays: true; }> | PartialObjectDeep<Model3d, { recurseIntoArrays: true; }> | PartialObjectDeep<Video, { recurseIntoArrays: true; }>",
                "description": "An object with fields that correspond to the Storefront API's [Media object](https://shopify.dev/api/storefront/reference/products/media)."
              },
              {
                "filePath": "/MediaFile.tsx",
                "syntaxKind": "PropertySignature",
                "name": "mediaOptions",
                "value": "{ image: Omit<ShopifyImageProps, \"data\">; video: Omit<ClassAttributes<HTMLVideoElement> & VideoHTMLAttributes<HTMLVideoElement> & VideoProps, \"data\">; externalVideo: Omit<YouTube | Vimeo, \"data\">; modelViewer: Omit<(props: ModelViewerProps) => Element, \"data\">; }",
                "description": "The options for the `Image`, `Video`, or `ExternalVideo` components.",
                "isOptional": true
              }
            ],
            "value": "interface MediaFileProps {\n  /** An object with fields that correspond to the Storefront API's [Media object](https://shopify.dev/api/storefront/reference/products/media). */\n  data: PartialDeep<MediaEdgeType['node'], {recurseIntoArrays: true}>;\n  /** The options for the `Image`, `Video`, or `ExternalVideo` components. */\n  mediaOptions?: {\n    /** Props that will only apply when an `<Image />` is rendered */\n    image: Omit<ShopifyImageProps, 'data'>;\n    /** Props that will only apply when a `<Video />` is rendered */\n    video: Omit<React.ComponentProps<typeof Video>, 'data'>;\n    /** Props that will only apply when an `<ExternalVideo />` is rendered */\n    externalVideo: Omit<\n      React.ComponentProps<typeof ExternalVideo>['options'],\n      'data'\n    >;\n    /** Props that will only apply when a `<ModelViewer />` is rendered */\n    modelViewer: Omit<typeof ModelViewer, 'data'>;\n  };\n}"
          },
          "PartialObjectDeep": {
            "description": "",
            "name": "PartialObjectDeep",
            "value": "PartialObjectDeep",
            "members": [],
            "override": "This is a test of the override system"
          },
          "ShopifyImageProps": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopifyImageProps",
            "value": "Omit<HtmlImageProps, 'src'> & {\n  /** An object with fields that correspond to the Storefront API's\n   * [Image object](https://shopify.dev/api/storefront/reference/common-objects/image).\n   * The `data` prop is required.\n   */\n  data: PartialDeep<ImageType, {recurseIntoArrays: true}>;\n  /** A custom function that generates the image URL. Parameters passed in\n   * are `ShopifyLoaderParams`\n   */\n  loader?: (params: ShopifyLoaderParams) => string;\n  /** An object of `loader` function options. For example, if the `loader` function\n   * requires a `scale` option, then the value can be a property of the\n   * `loaderOptions` object (for example, `{scale: 2}`). The object shape is `ShopifyLoaderOptions`.\n   */\n  loaderOptions?: ShopifyLoaderOptions;\n  /**\n   * `src` isn't used, and should instead be passed as part of the `data` object\n   */\n  src?: never;\n  /**\n   * An array of pixel widths to overwrite the default generated srcset. For example, `[300, 600, 800]`.\n   */\n  widths?: (HtmlImageProps['width'] | ImageType['width'])[];\n}",
            "description": ""
          },
          "HtmlImageProps": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "HtmlImageProps",
            "value": "React.ImgHTMLAttributes<HTMLImageElement>",
            "description": ""
          },
          "ShopifyLoaderParams": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopifyLoaderParams",
            "value": "Simplify<\n  ShopifyLoaderOptions & {\n    src: ImageType['url'];\n  }\n>",
            "description": ""
          },
          "ShopifyLoaderOptions": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopifyLoaderOptions",
            "value": "{\n  crop?: 'top' | 'bottom' | 'left' | 'right' | 'center';\n  scale?: 2 | 3;\n  width?: HtmlImageProps['width'] | ImageType['width'];\n  height?: HtmlImageProps['height'] | ImageType['height'];\n}",
            "description": "",
            "members": [
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "crop",
                "value": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "scale",
                "value": "3 | 2",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "width",
                "value": "string | number",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "height",
                "value": "string | number",
                "description": "",
                "isOptional": true
              }
            ]
          },
          "VideoProps": {
            "filePath": "/Video.tsx",
            "name": "VideoProps",
            "description": "",
            "members": [
              {
                "filePath": "/Video.tsx",
                "syntaxKind": "PropertySignature",
                "name": "data",
                "value": "PartialObjectDeep<Video, { recurseIntoArrays: true; }>",
                "description": "An object with fields that correspond to the Storefront API's [Video object](https://shopify.dev/api/storefront/latest/objects/video)."
              },
              {
                "filePath": "/Video.tsx",
                "syntaxKind": "PropertySignature",
                "name": "previewImageOptions",
                "value": "Simplify<ShopifyLoaderOptions & { src: string; }>",
                "description": "An object of image size options for the video's `previewImage`. Uses `shopifyImageLoader` to generate the `poster` URL.",
                "isOptional": true
              },
              {
                "filePath": "/Video.tsx",
                "syntaxKind": "PropertySignature",
                "name": "sourceProps",
                "value": "HTMLAttributes<HTMLSourceElement> & { 'data-testid'?: string; }",
                "description": "Props that will be passed to the `video` element's `source` children elements.",
                "isOptional": true
              }
            ],
            "value": "export interface VideoProps {\n  /** An object with fields that correspond to the Storefront API's [Video object](https://shopify.dev/api/storefront/latest/objects/video). */\n  data: PartialDeep<VideoType, {recurseIntoArrays: true}>;\n  /** An object of image size options for the video's `previewImage`. Uses `shopifyImageLoader` to generate the `poster` URL. */\n  previewImageOptions?: Parameters<typeof shopifyImageLoader>[0];\n  /** Props that will be passed to the `video` element's `source` children elements. */\n  sourceProps?: HTMLAttributes<HTMLSourceElement> & {\n    'data-testid'?: string;\n  };\n}"
          },
          "YouTube": {
            "filePath": "/ExternalVideo.tsx",
            "name": "YouTube",
            "description": "",
            "members": [
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "autoplay",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "cc_lang_pref",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "cc_load_policy",
                "value": "1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "color",
                "value": "\"red\" | \"white\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "controls",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "disablekb",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "enablejsapi",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "end",
                "value": "number",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "fs",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "hl",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "iv_load_policy",
                "value": "1 | 3",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "list",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "list_type",
                "value": "\"playlist\" | \"user_uploads\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "loop",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "modest_branding",
                "value": "1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "origin",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "playlist",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "plays_inline",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "rel",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "start",
                "value": "number",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "widget_referrer",
                "value": "string",
                "description": "",
                "isOptional": true
              }
            ],
            "value": "interface YouTube {\n  autoplay?: 0 | 1;\n  cc_lang_pref?: string;\n  cc_load_policy?: 1;\n  color?: 'red' | 'white';\n  controls?: 0 | 1;\n  disablekb?: 0 | 1;\n  enablejsapi?: 0 | 1;\n  end?: number;\n  fs?: 0 | 1;\n  hl?: string;\n  iv_load_policy?: 1 | 3;\n  list?: string;\n  list_type?: 'playlist' | 'user_uploads';\n  loop?: 0 | 1;\n  modest_branding?: 1;\n  origin?: string;\n  playlist?: string;\n  plays_inline?: 0 | 1;\n  rel?: 0 | 1;\n  start?: number;\n  widget_referrer?: string;\n}"
          },
          "Vimeo": {
            "filePath": "/ExternalVideo.tsx",
            "name": "Vimeo",
            "description": "",
            "members": [
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "autopause",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "autoplay",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "background",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "byline",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "color",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "controls",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "dnt",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "loop",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "muted",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "pip",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "playsinline",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "portrait",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "quality",
                "value": "\"240p\" | \"360p\" | \"540p\" | \"720p\" | \"1080p\" | \"2k\" | \"4k\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "speed",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "#t",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "texttrack",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "title",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "transparent",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              }
            ],
            "value": "interface Vimeo {\n  autopause?: VimeoBoolean;\n  autoplay?: VimeoBoolean;\n  background?: VimeoBoolean;\n  byline?: VimeoBoolean;\n  color?: string;\n  controls?: VimeoBoolean;\n  dnt?: VimeoBoolean;\n  loop?: VimeoBoolean;\n  muted?: VimeoBoolean;\n  pip?: VimeoBoolean;\n  playsinline?: VimeoBoolean;\n  portrait?: VimeoBoolean;\n  quality?: '240p' | '360p' | '540p' | '720p' | '1080p' | '2k' | '4k';\n  speed?: VimeoBoolean;\n  '#t'?: string;\n  texttrack?: string;\n  title?: VimeoBoolean;\n  transparent?: VimeoBoolean;\n}"
          },
          "VimeoBoolean": {
            "filePath": "/ExternalVideo.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "VimeoBoolean",
            "value": "0 | 1 | boolean",
            "description": ""
          },
          "ModelViewerProps": {
            "filePath": "/ModelViewer.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ModelViewerProps",
            "value": "Omit<\n  PartialDeep<JSX.IntrinsicElements['model-viewer'], {recurseIntoArrays: true}>,\n  PropsWeControl\n> & {\n  /** An object with fields that correspond to the Storefront API's [Model3D object](https://shopify.dev/api/storefront/latest/objects/model3d). */\n  data: PartialDeep<Model3d, {recurseIntoArrays: true}>;\n  /** The callback to invoke when the 'error' event is triggered. Refer to [error in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-error). */\n  onError?: (event: Event) => void;\n  /** The callback to invoke when the `load` event is triggered. Refer to [load in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-load). */\n  onLoad?: (event: Event) => void;\n  /** The callback to invoke when the 'preload' event is triggered. Refer to [preload in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-preload). */\n  onPreload?: (event: Event) => void;\n  /** The callback to invoke when the 'model-visibility' event is triggered. Refer to [model-visibility in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-modelVisibility). */\n  onModelVisibility?: (event: Event) => void;\n  /** The callback to invoke when the 'progress' event is triggered. Refer to [progress in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-progress). */\n  onProgress?: (event: Event) => void;\n  /** The callback to invoke when the 'ar-status' event is triggered. Refer to [ar-status in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-arStatus). */\n  onArStatus?: (event: Event) => void;\n  /** The callback to invoke when the 'ar-tracking' event is triggered. Refer to [ar-tracking in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-arTracking). */\n  onArTracking?: (event: Event) => void;\n  /** The callback to invoke when the 'quick-look-button-tapped' event is triggered. Refer to [quick-look-button-tapped in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-quickLookButtonTapped). */\n  onQuickLookButtonTapped?: (event: Event) => void;\n  /** The callback to invoke when the 'camera-change' event is triggered. Refer to [camera-change in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-stagingandcameras-events-cameraChange). */\n  onCameraChange?: (event: Event) => void;\n  /** The callback to invoke when the 'environment-change' event is triggered. Refer to [environment-change in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-lightingandenv-events-environmentChange).  */\n  onEnvironmentChange?: (event: Event) => void;\n  /**  The callback to invoke when the 'play' event is triggered. Refer to [play in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-animation-events-play). */\n  onPlay?: (event: Event) => void;\n  /**  The callback to invoke when the 'pause' event is triggered. Refer to [pause in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-animation-events-pause). */\n  onPause?: (event: Event) => void;\n  /** The callback to invoke when the 'scene-graph-ready' event is triggered. Refer to [scene-graph-ready in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-scenegraph-events-sceneGraphReady). */\n  onSceneGraphReady?: (event: Event) => void;\n}",
            "description": ""
          },
          "PropsWeControl": {
            "filePath": "/ModelViewer.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "PropsWeControl",
            "value": "'src'",
            "description": ""
          }
        }
      }
    ]
  },
  {
    "name": "metafield",
    "category": "components",
    "related": [
      {
        "name": "parseMetafield",
        "type": "utility",
        "url": "api/hydrogen/utilities/parsemetafield"
      },
      {
        "name": "parseMetafieldValue",
        "type": "utility",
        "url": "api/hydrogen/utilities/parsemetafieldvalue"
      }
    ],
    "description": "The `Metafield` component renders the value of a Storefront API's\n[Metafield object](https://shopify.dev/api/storefront/referenc common-objects/metafield). Relies on the `locale` property of the `useShop()` hook, so it must be a descendent of `<ShopifyProvider/>`.\nRenders a smart default of the Metafield's `value`. For more information, refer to the [Default output](#default-output) section.",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { Metafield } from \"./Metafield\";\n\nexport function Product({product}) {\n  const metafield = product.metafield;\n\n  return <Metafield data={metafield} />;\n}\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    },
    "definitions": [
      {
        "title": "Props",
        "description": "interface description",
        "type": "MetafieldProps",
        "typeDefinitions": {
          "MetafieldProps": {
            "filePath": "/Metafield.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "MetafieldProps",
            "value": "ComponentPropsWithoutRef<ComponentGeneric> & BaseProps<ComponentGeneric>",
            "description": ""
          },
          "BaseProps": {
            "filePath": "/Metafield.tsx",
            "name": "BaseProps",
            "description": "",
            "members": [
              {
                "filePath": "/Metafield.tsx",
                "syntaxKind": "PropertySignature",
                "name": "data",
                "value": "PartialObjectDeep<Metafield, { recurseIntoArrays: true; }>",
                "description": "An object with fields that correspond to the Storefront API's [Metafield object](https://shopify.dev/api/storefront/reference/common-objects/metafield)."
              },
              {
                "filePath": "/Metafield.tsx",
                "syntaxKind": "PropertySignature",
                "name": "as",
                "value": "ComponentGeneric",
                "description": "An HTML tag or React component to be rendered as the base element wrapper. The default value varies depending on [metafield.type](https://shopify.dev/apps/metafields/types).",
                "isOptional": true
              }
            ],
            "value": "interface BaseProps<ComponentGeneric extends ElementType> {\n  /** An object with fields that correspond to the Storefront API's [Metafield object](https://shopify.dev/api/storefront/reference/common-objects/metafield). */\n  data: PartialDeep<MetafieldType, {recurseIntoArrays: true}> | null;\n  /** An HTML tag or React component to be rendered as the base element wrapper. The default value varies depending on [metafield.type](https://shopify.dev/apps/metafields/types). */\n  as?: ComponentGeneric;\n}"
          },
          "PartialObjectDeep": {
            "description": "",
            "name": "PartialObjectDeep",
            "value": "PartialObjectDeep",
            "members": [],
            "override": "This is a test of the override system"
          }
        }
      }
    ]
  },
  {
    "name": "model viewer",
    "category": "components",
    "related": [
      {
        "name": "MediaFile",
        "type": "component",
        "url": "api/hydrogen/components/primitive/mediafile"
      }
    ],
    "description": "The `ModelViewer` component renders a 3D model for the Storefront API's\n[Model3d object](https://shopify.dev/api/storefront/reference/products/model3d).\nThe component outputs a `<model-viewer>` tag. You can [customize this component](https://shopify.dev/api/hydrogen/components#customizing-hydrogen-components) using passthrough props.",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { ModelViewer } from \"./ModelViewer\";\n\nexport default function MyProductModel() {\n  const data: any = {};\n\n  const firstMediaElement = data.products.edges[0].node.media.edges[0].node;\n  if (firstMediaElement.mediaContentType === 'MODEL_3D') {\n    return <ModelViewer data={firstMediaElement} />;\n  }\n}\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    },
    "definitions": [
      {
        "title": "props",
        "description": "interface description",
        "type": "ModelViewerProps",
        "typeDefinitions": {
          "ModelViewerProps": {
            "filePath": "/ModelViewer.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ModelViewerProps",
            "value": "Omit<\n  PartialDeep<JSX.IntrinsicElements['model-viewer'], {recurseIntoArrays: true}>,\n  PropsWeControl\n> & {\n  /** An object with fields that correspond to the Storefront API's [Model3D object](https://shopify.dev/api/storefront/latest/objects/model3d). */\n  data: PartialDeep<Model3d, {recurseIntoArrays: true}>;\n  /** The callback to invoke when the 'error' event is triggered. Refer to [error in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-error). */\n  onError?: (event: Event) => void;\n  /** The callback to invoke when the `load` event is triggered. Refer to [load in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-load). */\n  onLoad?: (event: Event) => void;\n  /** The callback to invoke when the 'preload' event is triggered. Refer to [preload in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-preload). */\n  onPreload?: (event: Event) => void;\n  /** The callback to invoke when the 'model-visibility' event is triggered. Refer to [model-visibility in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-modelVisibility). */\n  onModelVisibility?: (event: Event) => void;\n  /** The callback to invoke when the 'progress' event is triggered. Refer to [progress in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-progress). */\n  onProgress?: (event: Event) => void;\n  /** The callback to invoke when the 'ar-status' event is triggered. Refer to [ar-status in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-arStatus). */\n  onArStatus?: (event: Event) => void;\n  /** The callback to invoke when the 'ar-tracking' event is triggered. Refer to [ar-tracking in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-arTracking). */\n  onArTracking?: (event: Event) => void;\n  /** The callback to invoke when the 'quick-look-button-tapped' event is triggered. Refer to [quick-look-button-tapped in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-quickLookButtonTapped). */\n  onQuickLookButtonTapped?: (event: Event) => void;\n  /** The callback to invoke when the 'camera-change' event is triggered. Refer to [camera-change in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-stagingandcameras-events-cameraChange). */\n  onCameraChange?: (event: Event) => void;\n  /** The callback to invoke when the 'environment-change' event is triggered. Refer to [environment-change in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-lightingandenv-events-environmentChange).  */\n  onEnvironmentChange?: (event: Event) => void;\n  /**  The callback to invoke when the 'play' event is triggered. Refer to [play in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-animation-events-play). */\n  onPlay?: (event: Event) => void;\n  /**  The callback to invoke when the 'pause' event is triggered. Refer to [pause in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-animation-events-pause). */\n  onPause?: (event: Event) => void;\n  /** The callback to invoke when the 'scene-graph-ready' event is triggered. Refer to [scene-graph-ready in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-scenegraph-events-sceneGraphReady). */\n  onSceneGraphReady?: (event: Event) => void;\n}",
            "description": ""
          },
          "PropsWeControl": {
            "filePath": "/ModelViewer.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "PropsWeControl",
            "value": "'src'",
            "description": ""
          }
        }
      }
    ]
  },
  {
    "name": "money",
    "category": "components",
    "related": [
      {
        "name": "useMoney",
        "type": "hook",
        "url": "api/hydrogen/hooks/primitive/usemoney"
      }
    ],
    "description": "The `Money` component renders a string of the Storefront API's[MoneyV2 object](https://shopify.dev/api/storefront/reference/common-objects/moneyv2) according to the `locale` in the [`ShopifyProvider` component](/api/hydrogen/components/global/shopifyprovider).\nThe component outputs a `<div>`. You can [customize this component](https://api/hydrogen/components#customizing-hydrogen-components) using passthrough props.",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { Money } from \"./Money\";\n\nexport default function Product() {\n  const data: any = {};\n\n  return <Money data={data.product.variants.edges[0].node.priceV2} />;\n}\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    },
    "definitions": [
      {
        "title": "Props",
        "description": "interface description",
        "type": "MoneyProps",
        "typeDefinitions": {
          "MoneyProps": {
            "filePath": "/Money.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "MoneyProps",
            "value": "CustomProps<ComponentGeneric> & Omit<\n      React.ComponentPropsWithoutRef<ComponentGeneric>,\n      keyof CustomProps<ComponentGeneric>\n    >",
            "description": ""
          },
          "CustomProps": {
            "filePath": "/Money.tsx",
            "name": "CustomProps",
            "description": "",
            "members": [
              {
                "filePath": "/Money.tsx",
                "syntaxKind": "PropertySignature",
                "name": "as",
                "value": "ComponentGeneric",
                "description": "An HTML tag or React Component to be rendered as the base element wrapper. The default is `div`.",
                "isOptional": true
              },
              {
                "filePath": "/Money.tsx",
                "syntaxKind": "PropertySignature",
                "name": "data",
                "value": "PartialObjectDeep<MoneyV2, { recurseIntoArrays: true; }>",
                "description": "An object with fields that correspond to the Storefront API's [MoneyV2 object](https://shopify.dev/api/storefront/reference/common-objects/moneyv2)."
              },
              {
                "filePath": "/Money.tsx",
                "syntaxKind": "PropertySignature",
                "name": "withoutCurrency",
                "value": "boolean",
                "description": "Whether to remove the currency symbol from the output.",
                "isOptional": true
              },
              {
                "filePath": "/Money.tsx",
                "syntaxKind": "PropertySignature",
                "name": "withoutTrailingZeros",
                "value": "boolean",
                "description": "Whether to remove trailing zeros (fractional money) from the output.",
                "isOptional": true
              },
              {
                "filePath": "/Money.tsx",
                "syntaxKind": "PropertySignature",
                "name": "measurement",
                "value": "PartialObjectDeep<UnitPriceMeasurement, { recurseIntoArrays: true; }>",
                "description": "A [UnitPriceMeasurement object](https://shopify.dev/api/storefront/latest/objects/unitpricemeasurement).",
                "isOptional": true
              },
              {
                "filePath": "/Money.tsx",
                "syntaxKind": "PropertySignature",
                "name": "measurementSeparator",
                "value": "ReactNode",
                "description": "Customizes the separator between the money output and the measurement output. Used with the `measurement` prop. Defaults to `'/'`.",
                "isOptional": true
              }
            ],
            "value": "interface CustomProps<ComponentGeneric extends React.ElementType> {\n  /** An HTML tag or React Component to be rendered as the base element wrapper. The default is `div`. */\n  as?: ComponentGeneric;\n  /** An object with fields that correspond to the Storefront API's [MoneyV2 object](https://shopify.dev/api/storefront/reference/common-objects/moneyv2). */\n  data: PartialDeep<MoneyV2, {recurseIntoArrays: true}>;\n  /** Whether to remove the currency symbol from the output. */\n  withoutCurrency?: boolean;\n  /** Whether to remove trailing zeros (fractional money) from the output. */\n  withoutTrailingZeros?: boolean;\n  /** A [UnitPriceMeasurement object](https://shopify.dev/api/storefront/latest/objects/unitpricemeasurement). */\n  measurement?: PartialDeep<UnitPriceMeasurement, {recurseIntoArrays: true}>;\n  /** Customizes the separator between the money output and the measurement output. Used with the `measurement` prop. Defaults to `'/'`. */\n  measurementSeparator?: ReactNode;\n}"
          },
          "PartialObjectDeep": {
            "description": "",
            "name": "PartialObjectDeep",
            "value": "PartialObjectDeep",
            "members": [],
            "override": "This is a test of the override system"
          }
        }
      }
    ]
  },
  {
    "name": "product price",
    "category": "components",
    "related": [
      {
        "name": "ProductOptionsProvider",
        "type": "component",
        "url": "api/hydrogen/components/product-variant/productoptionsprovider"
      },
      {
        "name": "Money",
        "type": "component",
        "url": "api/hydrogen/components/primitive/money"
      }
    ],
    "description": "The `ProductPrice` component renders a `Money` component with the product [`priceRange`](https://shopify.dev/api/storefront/reference/products/productpricerange)'s `maxVariantPrice` or `minVariantPrice`, for either the regular price or compare at price range.",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { ProductPrice } from \"./ProductPrice\";\n\nexport function Product() {\n  const data: any = {};\n\n  return (\n    <ProductPrice data={Product} priceType=\"compareAt\" valueType=\"max\" />\n  );\n}\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    },
    "definitions": [
      {
        "title": "props",
        "description": "interface description",
        "type": "ProductPriceProps",
        "typeDefinitions": {
          "ProductPriceProps": {
            "filePath": "/ProductPrice.tsx",
            "name": "ProductPriceProps",
            "description": "",
            "members": [
              {
                "filePath": "/ProductPrice.tsx",
                "syntaxKind": "PropertySignature",
                "name": "data",
                "value": "PartialObjectDeep<Product, { recurseIntoArrays: true; }>",
                "description": "A [Product object](https://shopify.dev/api/storefront/reference/products/product)."
              },
              {
                "filePath": "/ProductPrice.tsx",
                "syntaxKind": "PropertySignature",
                "name": "priceType",
                "value": "\"regular\" | \"compareAt\"",
                "description": "The type of price. Valid values: `regular` (default) or `compareAt`.",
                "isOptional": true
              },
              {
                "filePath": "/ProductPrice.tsx",
                "syntaxKind": "PropertySignature",
                "name": "valueType",
                "value": "\"max\" | \"min\" | \"unit\"",
                "description": "The type of value. Valid values: `min` (default), `max` or `unit`.",
                "isOptional": true
              },
              {
                "filePath": "/ProductPrice.tsx",
                "syntaxKind": "PropertySignature",
                "name": "variantId",
                "value": "string",
                "description": "The ID of the variant.",
                "isOptional": true
              }
            ],
            "value": "interface ProductPriceProps {\n  /** A [Product object](https://shopify.dev/api/storefront/reference/products/product). */\n  data: PartialDeep<Product, {recurseIntoArrays: true}>;\n  /** The type of price. Valid values: `regular` (default) or `compareAt`. */\n  priceType?: 'regular' | 'compareAt';\n  /** The type of value. Valid values: `min` (default), `max` or `unit`. */\n  valueType?: 'max' | 'min' | 'unit';\n  /** The ID of the variant. */\n  variantId?: string;\n}"
          },
          "PartialObjectDeep": {
            "description": "",
            "name": "PartialObjectDeep",
            "value": "PartialObjectDeep",
            "members": [],
            "override": "This is a test of the override system"
          }
        }
      }
    ]
  },
  {
    "name": "product provider",
    "category": "components",
    "related": [
      {
        "name": "ProductPrice",
        "type": "component",
        "url": "api/hydrogen/components/product-variant/productprice"
      },
      {
        "name": "ProductOptionsProvider",
        "type": "component",
        "url": "api/hydrogen/components/product-variant/productoptionsprovider"
      },
      {
        "name": "useProductOptions",
        "type": "hook",
        "url": "api/hydrogen/hooks/product-variant/useproductoptions"
      }
    ],
    "description": "> Note:\n> `ProductProvider` is only available as part of the [Hydrogen UI](/custom-storefronts/hydrogen/alternate-frameworks) package, which is in beta. If you're building with Hydrogen, then use [`ProductOptionsProvider`](https://shopify.dev/api/hydrogen/components/product-variant/productoptionsprovider)\nThe `ProductProvider` component sets up a context with state that tracks the selected variant and options. Descendants of this component can use the [`useProductOptions`](https://shopify.dev/api/hydrogen/hooks/product-variant useproductoptions) hook.",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "export function Product() {\n  const data: any = {};\n\n  return (\n    <ProductProvider data={data.product} initialVariantId=\"some-id\">{/* Your JSX */}</ProductProvider>\n  );\n}\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    },
    "definitions": [
      {
        "title": "Props",
        "description": "interface description",
        "type": "ProductProviderProps",
        "typeDefinitions": {
          "ProductProviderProps": {
            "filePath": "/ProductProvider.tsx",
            "name": "ProductProviderProps",
            "description": "",
            "members": [
              {
                "filePath": "/ProductProvider.tsx",
                "syntaxKind": "PropertySignature",
                "name": "data",
                "value": "PartialObjectDeep<Product, { recurseIntoArrays: true; }>",
                "description": "A [Product object](https://shopify.dev/api/storefront/reference/products/product)."
              },
              {
                "filePath": "/ProductProvider.tsx",
                "syntaxKind": "PropertySignature",
                "name": "children",
                "value": "ReactNode",
                "description": "A `ReactNode` element."
              },
              {
                "filePath": "/ProductProvider.tsx",
                "syntaxKind": "PropertySignature",
                "name": "initialVariantId",
                "value": "string",
                "description": "The initially selected variant.\nThe following logic applies to `initialVariantId`:\n1. If `initialVariantId` is provided, then it's used even if it's out of stock.\n2. If `initialVariantId` is provided but is `null`, then no variant is used.\n3. If nothing is passed to `initialVariantId` then the first available / in-stock variant is used.\n4. If nothing is passed to `initialVariantId` and no variants are in stock, then the first variant is used.",
                "isOptional": true
              }
            ],
            "value": "interface ProductProviderProps {\n  /** A [Product object](https://shopify.dev/api/storefront/reference/products/product). */\n  data: PartialDeep<Product, {recurseIntoArrays: true}>;\n  /** A `ReactNode` element. */\n  children: React.ReactNode;\n  /**\n   * The initially selected variant.\n   * The following logic applies to `initialVariantId`:\n   * 1. If `initialVariantId` is provided, then it's used even if it's out of stock.\n   * 2. If `initialVariantId` is provided but is `null`, then no variant is used.\n   * 3. If nothing is passed to `initialVariantId` then the first available / in-stock variant is used.\n   * 4. If nothing is passed to `initialVariantId` and no variants are in stock, then the first variant is used.\n   */\n  initialVariantId?: InitialVariantId;\n}"
          },
          "PartialObjectDeep": {
            "description": "",
            "name": "PartialObjectDeep",
            "value": "PartialObjectDeep",
            "members": [],
            "override": "This is a test of the override system"
          }
        }
      }
    ]
  },
  {
    "name": "shop pay button",
    "category": "components",
    "related": [
      {
        "name": "CartShopPayButton",
        "type": "component",
        "url": "api/hydrogen/components/cart/cartshoppaybutton"
      }
    ],
    "description": "The `ShopPayButton` component renders a button that redirects to the Shop Pay checkout. You can[customize this component](https://shopify.dev/api/hydrogen/components#customizing-hydrogen-components) using passthrough props.",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { ShopPayButton } from \"./ShopPayButton\";\n\nexport function MyProduct({variantId}) {\n  return <ShopPayButton variantIds={[variantId]} />;\n}\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    },
    "definitions": [
      {
        "title": "Props",
        "description": "interface description",
        "type": "ShopPayButtonProps",
        "typeDefinitions": {
          "ShopPayButtonProps": {
            "filePath": "/ShopPayButton.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopPayButtonProps",
            "value": "{\n  /** A string of classes to apply to the `div` that wraps the Shop Pay button. */\n  className?: string;\n  /** A string that's applied to the [CSS custom property (variable)](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) `--shop-pay-button-width` for the [Buy with Shop Pay component](https://shopify.dev/custom-storefronts/tools/web-components#buy-with-shop-pay-component). */\n  width?: string;\n} & (\n  | {\n      /** An array of IDs of the variants to purchase with Shop Pay. This will only ever have a quantity of 1 for each variant. If you want to use other quantities, then use 'variantIdsAndQuantities'. */\n      variantIds: string[];\n      /** An array of variant IDs and quantities to purchase with Shop Pay. */\n      variantIdsAndQuantities?: never;\n    }\n  | {\n      /** An array of IDs of the variants to purchase with Shop Pay. This will only ever have a quantity of 1 for each variant. If you want to use other quantities, then use 'variantIdsAndQuantities'. */\n      variantIds?: never;\n      /** An array of variant IDs and quantities to purchase with Shop Pay. */\n      variantIdsAndQuantities: Array<{\n        id: string;\n        quantity: number;\n      }>;\n    }\n)",
            "description": ""
          }
        }
      }
    ]
  },
  {
    "name": "shopify provider",
    "category": "components",
    "related": [],
    "description": "The `ShopifyProvider` component wraps your entire app and provides functionality for many components, hooks, and utilities. The `ShopifyProvider` component also provides localization data for the app. You should place it in your app's entry point component.",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { ShopifyProvider } from \"./ShopifyProvider\";\n\nexport default function App() {\n  return <ShopifyProvider>{/* Routes, Pages, etc */}</ShopifyProvider>;\n}\n/* Ren note: it doesn't like that we're not providing shopifyConfig*/\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    }
  },
  {
    "name": "video",
    "category": "components",
    "related": [
      {
        "name": "MediaFile",
        "type": "component",
        "url": "api/hydrogen/components/primitive/mediafile"
      },
      {
        "name": "Image",
        "type": "component",
        "url": "api/hydrogen/components/primitive/image"
      }
    ],
    "description": "The `Video` component renders a video for the Storefront API's [Video object](https://shopify.dev/api/storefront/reference/products/video).\nThe component outputs a `video` element. You can [customize this component](https://shopify.dev/api/hydrogen/components#customizing-hydrogen-components) using passthrough props.",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { Video } from \"./Video\";\n\nexport default function MyProductVideo() {\n  const data: any = {};\n\n  const firstMediaElement = data.products.edges[0].node.media.edges[0].node;\n  if (firstMediaElement.mediaContentType === 'VIDEO') {\n    return <Video data={firstMediaElement} />;\n  }\n}\n",
            "language": "jsx"
          }
        ],
        "title": "Example code"
      }
    },
    "definitions": [
      {
        "title": "Props",
        "description": "interface description",
        "type": "VideoProps",
        "typeDefinitions": {
          "VideoProps": {
            "filePath": "/Video.tsx",
            "name": "VideoProps",
            "description": "",
            "members": [
              {
                "filePath": "/Video.tsx",
                "syntaxKind": "PropertySignature",
                "name": "data",
                "value": "PartialObjectDeep<Video, { recurseIntoArrays: true; }>",
                "description": "An object with fields that correspond to the Storefront API's [Video object](https://shopify.dev/api/storefront/latest/objects/video)."
              },
              {
                "filePath": "/Video.tsx",
                "syntaxKind": "PropertySignature",
                "name": "previewImageOptions",
                "value": "Simplify<ShopifyLoaderOptions & { src: string; }>",
                "description": "An object of image size options for the video's `previewImage`. Uses `shopifyImageLoader` to generate the `poster` URL.",
                "isOptional": true
              },
              {
                "filePath": "/Video.tsx",
                "syntaxKind": "PropertySignature",
                "name": "sourceProps",
                "value": "HTMLAttributes<HTMLSourceElement> & { 'data-testid'?: string; }",
                "description": "Props that will be passed to the `video` element's `source` children elements.",
                "isOptional": true
              }
            ],
            "value": "export interface VideoProps {\n  /** An object with fields that correspond to the Storefront API's [Video object](https://shopify.dev/api/storefront/latest/objects/video). */\n  data: PartialDeep<VideoType, {recurseIntoArrays: true}>;\n  /** An object of image size options for the video's `previewImage`. Uses `shopifyImageLoader` to generate the `poster` URL. */\n  previewImageOptions?: Parameters<typeof shopifyImageLoader>[0];\n  /** Props that will be passed to the `video` element's `source` children elements. */\n  sourceProps?: HTMLAttributes<HTMLSourceElement> & {\n    'data-testid'?: string;\n  };\n}"
          },
          "PartialObjectDeep": {
            "description": "",
            "name": "PartialObjectDeep",
            "value": "PartialObjectDeep",
            "members": [],
            "override": "This is a test of the override system"
          },
          "ShopifyLoaderOptions": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopifyLoaderOptions",
            "value": "{\n  crop?: 'top' | 'bottom' | 'left' | 'right' | 'center';\n  scale?: 2 | 3;\n  width?: HtmlImageProps['width'] | ImageType['width'];\n  height?: HtmlImageProps['height'] | ImageType['height'];\n}",
            "description": "",
            "members": [
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "crop",
                "value": "\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "scale",
                "value": "3 | 2",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "width",
                "value": "string | number",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/Image.tsx",
                "syntaxKind": "PropertySignature",
                "name": "height",
                "value": "string | number",
                "description": "",
                "isOptional": true
              }
            ]
          }
        }
      }
    ]
  }
]