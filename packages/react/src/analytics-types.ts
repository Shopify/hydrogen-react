import type {Product, ProductVariant} from './storefront-api-types.js';
import {
  AnalyticsEventName,
  ShopifySalesChannel,
} from './analytics-constants.js';
import {SHOPIFY_Y, SHOPIFY_S} from './cart-constants.js';

export type ClientBrowserParameters = {
  /** Shopify unique user token: Value of `_shopify_y` cookie */
  uniqueToken: string;
  /** Shopify session token: Value of `_shopify_s` cookie */
  visitToken: string;
  /** `window.location.href` */
  url: string;
  /** `window.location.pathname` */
  path: string;
  /** `window.location.href` */
  search: string;
  /** `window.location.search` */
  referrer: string;
  /** `document.referrer` */
  title: string;
  /** `navigator.userAgent` */
  userAgent: string;
  /** 'navigate' | 'reload' | 'back_forward' | 'prerender' | 'unknown <number>' */
  navigationType: string;
  /** 'PerformanceNavigationTiming' | 'performance.navigation' */
  navigationApi: string;
};

export type ShopifyAnalyticsProduct = {
  productGid: Product['id'];
  variantGid?: ProductVariant['id'];
  name: Product['title'];
  variantName?: ProductVariant['title'];
  brand: Product['vendor'];
  category?: Product['productType'];
  price: ProductVariant['price']['amount'];
  sku?: ProductVariant['sku'];
  quantity?: number;
};

export type ShopifySalesChannels = keyof typeof ShopifySalesChannel;
export type AnalyticsEventNames = keyof typeof AnalyticsEventName;

export type ShopifyPageViewPayload = {
  /** If we have consent from buyer for data collection */
  hasUserConsent: boolean;
  /** Shopify shop id in the form of `gid://shopify/Shop/<id>` */
  shopId: string;
  /** Currency code */
  currency: string;
  /** Shopify storefront id generated by Hydrogen sales channel */
  storefrontId?: string;
  /** Language displayed to buyer */
  acceptedLanguage?: string;
  /** Shopify sales channel */
  shopifySalesChannel?: ShopifySalesChannels;
  /** Shopify customer id in the form of `gid://shopify/Customer/<id>` */
  customerId?: string;
  /** Total value of products */
  totalValue?: number;
  /** Shopify products */
  products?: ShopifyAnalyticsProduct[];
  /** Canonical url */
  canonicalUrl?: string;
  /** Shopify page type */
  pageType?: string;
  /** Shopify resource id in the form of `gid://shopify/<type>/<id>`  */
  resourceId?: string;
  /** Shopify collection handle */
  collectionHandle?: string;
  /** Search term used on a search results page*/
  searchString?: string;
  /** Shopify unique user token: Value of `_shopify_y` cookie. Use `getClientBrowserParameters()` to collect this value. */
  uniqueToken: string;
  /** Shopify session token: Value of `_shopify_s` cookie. Use `getClientBrowserParameters()` to collect this value. */
  visitToken: string;
  /** `window.location.href`. Use `getClientBrowserParameters()` to collect this value. */
  url: string;
  /** `window.location.pathname`. Use `getClientBrowserParameters()` to collect this value. */
  path: string;
  /** `window.location.href`. Use `getClientBrowserParameters()` to collect this value. */
  search: string;
  /** `window.location.search`. Use `getClientBrowserParameters()` to collect this value. */
  referrer: string;
  /** `document.referrer`. Use `getClientBrowserParameters()` to collect this value. */
  title: string;
  /** `navigator.userAgent`. Use `getClientBrowserParameters()` to collect this value. */
  userAgent: string;
  /** 'navigate' | 'reload' | 'back_forward' | 'prerender' | 'unknown <number>'. Use `getClientBrowserParameters()` to collect this value. */
  navigationType: string;
  /** 'PerformanceNavigationTiming' | 'performance.navigation'. Use `getClientBrowserParameters()` to collect this value. */
  navigationApi: string;
};

export type ShopifyPageView = {
  eventName: string;
  payload: ShopifyPageViewPayload;
};

export type ShopifyAddToCartPayload = {
  /** If we have consent from buyer for data collection */
  hasUserConsent: boolean;
  /** Shopify shop id in the form of `gid://shopify/Shop/<id>` */
  shopId: string;
  /** Currency code */
  currency: string;
  /** Shopify storefront id generated by Hydrogen sales channel */
  storefrontId?: string;
  /** Language displayed to buyer */
  acceptedLanguage?: string;
  /** Shopify sales channel */
  shopifySalesChannel?: ShopifySalesChannels;
  /** Shopify customer id in the form of `gid://shopify/Customer/<id>` */
  customerId?: string;
  /** Total value of products */
  totalValue?: number;
  /** Shopify products */
  products?: ShopifyAnalyticsProduct[];
  /** Shopify cart id in the form of `gid://shopify/Cart/<id>`*/
  cartId: string;
  searchString?: string;
  /** Shopify unique user token: Value of `_shopify_y` cookie. Use `getClientBrowserParameters()` to collect this value. */
  uniqueToken: string;
  /** Shopify session token: Value of `_shopify_s` cookie. Use `getClientBrowserParameters()` to collect this value. */
  visitToken: string;
  /** `window.location.href`. Use `getClientBrowserParameters()` to collect this value. */
  url: string;
  /** `window.location.pathname`. Use `getClientBrowserParameters()` to collect this value. */
  path: string;
  /** `window.location.href`. Use `getClientBrowserParameters()` to collect this value. */
  search: string;
  /** `window.location.search`. Use `getClientBrowserParameters()` to collect this value. */
  referrer: string;
  /** `document.referrer`. Use `getClientBrowserParameters()` to collect this value. */
  title: string;
  /** `navigator.userAgent`. Use `getClientBrowserParameters()` to collect this value. */
  userAgent: string;
  /** 'navigate' | 'reload' | 'back_forward' | 'prerender' | 'unknown <number>'. Use `getClientBrowserParameters()` to collect this value. */
  navigationType: string;
  /** 'PerformanceNavigationTiming' | 'performance.navigation'. Use `getClientBrowserParameters()` to collect this value. */
  navigationApi: string;
};

export type ShopifyAddToCart = {
  eventName: string;
  payload: ShopifyAddToCartPayload;
};

export type ShopifyMonorailPayload = {
  products?: string[];
  [key: string]: unknown;
};

export type ShopifyMonorailEvent = {
  schema_id: string;
  payload: ShopifyMonorailPayload;
  metadata: {
    event_created_at_ms: number;
  };
};

export type ShopifyAnalyticsPayload =
  | ShopifyPageViewPayload
  | ShopifyAddToCartPayload;
export type ShopifyAnalytics = ShopifyPageView | ShopifyAddToCart;

export type ShopifyCookies = {
  /** Shopify unique user token: Value of `_shopify_y` cookie */
  [SHOPIFY_Y]: string;
  /** Shopify session token: Value of `_shopify_s` cookie */
  [SHOPIFY_S]: string;
};

export type ShopifyGId = {
  id: string;
  resource: string | null;
};
