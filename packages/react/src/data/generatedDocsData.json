[
  {
    "name": "external video",
    "category": "components",
    "related": [],
    "description": "The `ExternalVideo` component renders an embedded video for the Storefront. API's [ExternalVideo object](https://shopify.dev/api/storefront/reference/products/externalvideo).",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { ExternalVideo } from \"./ExternalVideo\";\n\nexport default function MyProductVideo() {\n    const data: any = {};\n\n    const firstMediaElement = data.products.edges[0].node.media.edges[0].node;\n    if (firstMediaElement.mediaContentType === 'EXTERNAL_VIDEO') {\n        return <ExternalVideo data={firstMediaElement} />;\n    }\n}\n",
            "language": "jsx"
          }
        ],
        "title": "codeblock title"
      }
    },
    "definitions": [
      {
        "title": "props",
        "description": "interface description",
        "type": "ExternalVideoProps",
        "typeDefinitions": {
          "ExternalVideoProps": {
            "filePath": "/ExternalVideo.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ExternalVideoProps",
            "value": "Omit<\n  JSX.IntrinsicElements['iframe'],\n  PropsWeControl\n> & BaseProps",
            "description": ""
          },
          "PropsWeControl": {
            "filePath": "/ExternalVideo.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "PropsWeControl",
            "value": "'src'",
            "description": ""
          },
          "BaseProps": {
            "filePath": "/ExternalVideo.tsx",
            "name": "BaseProps",
            "description": "",
            "members": [
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "data",
                "value": "PartialObjectDeep<ExternalVideo, { recurseIntoArrays: true; }>",
                "description": "An object with fields that correspond to the Storefront API's [ExternalVideo object](https://shopify.dev/api/storefront/reference/products/externalvideo)."
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "options",
                "value": "YouTube | Vimeo",
                "description": "An object containing the options available for either\n[YouTube](https://developers.google.com/youtube/player_parameters#Parameters) or\n[Vimeo](https://vimeo.zendesk.com/hc/en-us/articles/360001494447-Using-Player-Parameters).",
                "isOptional": true
              }
            ],
            "value": "interface BaseProps {\n  /**\n   * An object with fields that correspond to the Storefront API's [ExternalVideo object](https://shopify.dev/api/storefront/reference/products/externalvideo).\n   */\n  data: PartialDeep<ExternalVideoType, {recurseIntoArrays: true}>;\n  /** An object containing the options available for either\n   * [YouTube](https://developers.google.com/youtube/player_parameters#Parameters) or\n   * [Vimeo](https://vimeo.zendesk.com/hc/en-us/articles/360001494447-Using-Player-Parameters).\n   */\n  options?: YouTube | Vimeo;\n}"
          },
          "YouTube": {
            "filePath": "/ExternalVideo.tsx",
            "name": "YouTube",
            "description": "",
            "members": [
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "autoplay",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "cc_lang_pref",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "cc_load_policy",
                "value": "1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "color",
                "value": "\"red\" | \"white\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "controls",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "disablekb",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "enablejsapi",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "end",
                "value": "number",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "fs",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "hl",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "iv_load_policy",
                "value": "1 | 3",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "list",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "list_type",
                "value": "\"playlist\" | \"user_uploads\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "loop",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "modest_branding",
                "value": "1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "origin",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "playlist",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "plays_inline",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "rel",
                "value": "0 | 1",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "start",
                "value": "number",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "widget_referrer",
                "value": "string",
                "description": "",
                "isOptional": true
              }
            ],
            "value": "interface YouTube {\n  autoplay?: 0 | 1;\n  cc_lang_pref?: string;\n  cc_load_policy?: 1;\n  color?: 'red' | 'white';\n  controls?: 0 | 1;\n  disablekb?: 0 | 1;\n  enablejsapi?: 0 | 1;\n  end?: number;\n  fs?: 0 | 1;\n  hl?: string;\n  iv_load_policy?: 1 | 3;\n  list?: string;\n  list_type?: 'playlist' | 'user_uploads';\n  loop?: 0 | 1;\n  modest_branding?: 1;\n  origin?: string;\n  playlist?: string;\n  plays_inline?: 0 | 1;\n  rel?: 0 | 1;\n  start?: number;\n  widget_referrer?: string;\n}"
          },
          "Vimeo": {
            "filePath": "/ExternalVideo.tsx",
            "name": "Vimeo",
            "description": "",
            "members": [
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "autopause",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "autoplay",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "background",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "byline",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "color",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "controls",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "dnt",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "loop",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "muted",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "pip",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "playsinline",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "portrait",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "quality",
                "value": "\"240p\" | \"360p\" | \"540p\" | \"720p\" | \"1080p\" | \"2k\" | \"4k\"",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "speed",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "#t",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "texttrack",
                "value": "string",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "title",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              },
              {
                "filePath": "/ExternalVideo.tsx",
                "syntaxKind": "PropertySignature",
                "name": "transparent",
                "value": "VimeoBoolean",
                "description": "",
                "isOptional": true
              }
            ],
            "value": "interface Vimeo {\n  autopause?: VimeoBoolean;\n  autoplay?: VimeoBoolean;\n  background?: VimeoBoolean;\n  byline?: VimeoBoolean;\n  color?: string;\n  controls?: VimeoBoolean;\n  dnt?: VimeoBoolean;\n  loop?: VimeoBoolean;\n  muted?: VimeoBoolean;\n  pip?: VimeoBoolean;\n  playsinline?: VimeoBoolean;\n  portrait?: VimeoBoolean;\n  quality?: '240p' | '360p' | '540p' | '720p' | '1080p' | '2k' | '4k';\n  speed?: VimeoBoolean;\n  '#t'?: string;\n  texttrack?: string;\n  title?: VimeoBoolean;\n  transparent?: VimeoBoolean;\n}"
          },
          "VimeoBoolean": {
            "filePath": "/ExternalVideo.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "VimeoBoolean",
            "value": "0 | 1 | boolean",
            "description": ""
          }
        }
      }
    ]
  },
  {
    "name": "image",
    "category": "components",
    "related": [
      {
        "name": "CartLines",
        "type": "component",
        "url": "api/hydrogen/components/CartLines"
      },
      {
        "name": "Url.com",
        "type": "external",
        "url": "http://www.url.com"
      }
    ],
    "description": "The `Image` component renders an image for the Storefront API's\n[Image object](https://shopify.dev/api/storefront/reference/common-objects/image) by using the `data` prop. You can [customize this component](https://shopify.dev/api/hydrogen/components#customizing-hydrogen-components) using passthrough props.\n\nAn image's width and height are determined using the following priority list:\n1. The width and height values for the `loaderOptions` prop\n2. The width and height values for bare props\n3. The width and height values for the `data` prop\n\nIf only one of `width` or `height` are defined, then the other will attempt to be calculated based on the image's aspect ratio,\nprovided that both `data.width` and `data.height` are available. If `data.width` and `data.height` aren't available, then the aspect ratio cannot be determined and the missing\nvalue will remain as `null`",
    "type": "component",
    "defaultExample": {
      "description": "I am the default example",
      "codeblock": {
        "tabs": [
          {
            "code": "import { ExternalVideo } from \"./ExternalVideo\";\n\nexport default function MyProductVideo() {\n    const data: any = {};\n\n    const firstMediaElement = data.products.edges[0].node.media.edges[0].node;\n    if (firstMediaElement.mediaContentType === 'EXTERNAL_VIDEO') {\n        return <ExternalVideo data={firstMediaElement} />;\n    }\n}\n",
            "language": "jsx"
          }
        ],
        "title": "codeblock title"
      }
    },
    "definitions": [
      {
        "title": "props",
        "description": "interface description",
        "type": "ShopifyImageProps",
        "typeDefinitions": {
          "ShopifyImageProps": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopifyImageProps",
            "value": "Omit<HtmlImageProps, 'src'> & {\n  /** An object with fields that correspond to the Storefront API's\n   * [Image object](https://shopify.dev/api/storefront/reference/common-objects/image).\n   * The `data` prop is required.\n   */\n  data: PartialDeep<ImageType, {recurseIntoArrays: true}>;\n  /** A custom function that generates the image URL. Parameters passed in\n   * are `ShopifyLoaderParams`\n   */\n  loader?: (params: ShopifyLoaderParams) => string;\n  /** An object of `loader` function options. For example, if the `loader` function\n   * requires a `scale` option, then the value can be a property of the\n   * `loaderOptions` object (for example, `{scale: 2}`). The object shape is `ShopifyLoaderOptions`.\n   */\n  loaderOptions?: ShopifyLoaderOptions;\n  /**\n   * `src` isn't used, and should instead be passed as part of the `data` object\n   */\n  src?: never;\n  /**\n   * An array of pixel widths to overwrite the default generated srcset. For example, `[300, 600, 800]`.\n   */\n  widths?: (HtmlImageProps['width'] | ImageType['width'])[];\n}",
            "description": ""
          },
          "HtmlImageProps": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "HtmlImageProps",
            "value": "React.ImgHTMLAttributes<HTMLImageElement>",
            "description": ""
          },
          "ShopifyLoaderParams": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopifyLoaderParams",
            "value": "Simplify<\n  ShopifyLoaderOptions & {\n    src: ImageType['url'];\n  }\n>",
            "description": ""
          },
          "ShopifyLoaderOptions": {
            "filePath": "/Image.tsx",
            "syntaxKind": "TypeAliasDeclaration",
            "name": "ShopifyLoaderOptions",
            "value": "{\n  crop?: 'top' | 'bottom' | 'left' | 'right' | 'center';\n  scale?: 2 | 3;\n  width?: HtmlImageProps['width'] | ImageType['width'];\n  height?: HtmlImageProps['height'] | ImageType['height'];\n}",
            "description": ""
          }
        }
      }
    ]
  }
]