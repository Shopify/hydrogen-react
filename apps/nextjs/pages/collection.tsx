import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import {graphql} from '../gql/gql';
import {request} from 'graphql-request';
import type {GetServerSideProps} from 'next';
import {shopClient} from '../src/shopify-client';
import type {CollectionQuery} from '../gql/graphql';
import {
  type StorefrontApiResponseOk,
  useShop,
  AnalyticsPageType,
} from '@shopify/hydrogen-react';
import Link from 'next/link';

export const getServerSideProps: GetServerSideProps = async () => {
  // @TODO figure out how to get the client's IP address correctly and accurately.
  // const buyerIp =
  //   req.headers["x-real-ip"] ??
  //   req.headers["x-forwarded-for"] ??
  //   req.socket.remoteAddress;

  try {
    const response = await request({
      url: shopClient.getStorefrontApiUrl(),
      document: query,
      variables: {
        handle: 'freestyle',
      },
      // @TODO: convert to 'getPrivateTokenHeaders({buyerIp})'
      requestHeaders: shopClient.getPublicTokenHeaders(),
    });

    if (!response.collection) {
      return {props: {data: null, errors: ['No collection found']}};
    }

    const collection = response.collection;

    // @TODO I don't love how we do this with 'errors' and 'data'
    return {
      props: {
        data: response,
        errors: null,
        analytics: {
          pageType: AnalyticsPageType.collection,
          resourceId: collection.id,
          collectionHandle: collection.handle,
        },
      },
    };
  } catch (err) {
    console.error(err);
    return {props: {data: null, errors: [(err as Error).toString()]}};
  }
};

export default function Collection({
  data,
  errors,
}: StorefrontApiResponseOk<CollectionQuery>) {
  const {storeDomain} = useShop();

  if (!data || errors) {
    console.error(errors);
    return <div>Whoops there was an error! Please refresh and try again.</div>;
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Collection Page</h1>
        <div>Storefront API Domain: {storeDomain}</div>
        <br />

        <br />
        <Link href="/">Back to Home</Link>
        <Link href="/product">Go to Product</Link>
        <Link href="/search">Go to Search</Link>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=hydrogen-react-monorepo"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

const query = graphql(`
  query Collection($handle: String!) {
    collection(handle: $handle) {
      id
      handle
      title
      description
    }
  }
`);
